import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import * as Localization from 'expo-localization';
import { I18nManager } from 'react-native';

// Load resources (bundled) - will be generated by codegen below
import he_common from '../locales/he/common.json';
import he_settings from '../locales/he/settings.json';
import he_home from '../locales/he/home.json';
import he_profile from '../locales/he/profile.json';
import he_donations from '../locales/he/donations.json';
import he_notifications from '../locales/he/notifications.json';
import he_auth from '../locales/he/auth.json';
import he_errors from '../locales/he/errors.json';
import he_buttons from '../locales/he/buttons.json';
import he_labels from '../locales/he/labels.json';

import en_common from '../locales/en/common.json';
import en_settings from '../locales/en/settings.json';
import en_home from '../locales/en/home.json';
import en_profile from '../locales/en/profile.json';
import en_donations from '../locales/en/donations.json';
import en_notifications from '../locales/en/notifications.json';
import en_auth from '../locales/en/auth.json';
import en_errors from '../locales/en/errors.json';
import en_buttons from '../locales/en/buttons.json';
import en_labels from '../locales/en/labels.json';

const resources = {
  he: {
    common: he_common,
    settings: he_settings,
    home: he_home,
    profile: he_profile,
    donations: he_donations,
    notifications: he_notifications,
    auth: he_auth,
    errors: he_errors,
    buttons: he_buttons,
    labels: he_labels,
  },
  en: {
    common: en_common,
    settings: en_settings,
    home: en_home,
    profile: en_profile,
    donations: en_donations,
    notifications: en_notifications,
    auth: en_auth,
    errors: en_errors,
    buttons: en_buttons,
    labels: en_labels,
  },
};

const deviceLocales = Localization.getLocales();
const deviceLang = deviceLocales && deviceLocales.length > 0 ? deviceLocales[0].languageCode : 'he';
const initialLang = deviceLang === 'he' ? 'he' : 'en';

if (I18nManager.isRTL !== (initialLang === 'he')) {
  I18nManager.allowRTL(initialLang === 'he');
  I18nManager.forceRTL(initialLang === 'he');
}

i18n
  .use(initReactI18next)
  .init({
    resources,
    lng: initialLang,
    fallbackLng: 'en',
    ns: ['common', 'settings', 'home', 'profile', 'donations', 'notifications', 'auth', 'errors', 'buttons', 'labels'],
    defaultNS: 'common',
    compatibilityJSON: 'v3',
    interpolation: {
      escapeValue: false,
    },
    returnEmptyString: false,
  });

export default i18n;